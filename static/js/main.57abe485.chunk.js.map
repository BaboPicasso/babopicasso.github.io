{"version":3,"sources":["components/Functions/isPropertyDefined.js","components/Providers/FireBaseProvider.js","components/Functions/uniqueId.js","components/Atomics/Snack.js","components/Atomics/Snackbar.js","components/Providers/ThemeProvider.js","components/Providers/index.jsx","components/Routes/index.jsx","components/App.js","serviceWorker.js","index.js"],"names":["isPropertyDefined","object","properties","returnValue","temp","length","constructor","Object","entries","i","FireBaseContext","React","createContext","FireBaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useFieldValue","FireBaseApp","firestore","FieldValue","useFireBaseAuth","useContext","auth","useIsAuthenticated","useState","authenticated","setAuthenticated","FireBaseAuth","useEffect","unsubscribe","onAuthStateChanged","user","useIsAdmin","userInfo","useUserInfo","setUserInfo","uid","email","Firestore","useFireBaseFirestore","collection","doc","get","then","state","data","useSignOut","password","signOut","useSignInWithEmailAndPassword","signInWithEmailAndPassword","useCreateWithEmailAndPassword","createUserWithEmailAndPassword","FireBaseProvider","children","FireBase","initializeApp","GetOptions","source","enablePersistence","catch","err","code","console","log","Provider","value","chars","uniqueId","Math","round","random","Snack","styled","animated","div","SnackContext","Base","useAddSnack","Snackbar","setState","transition","useTransition","item","key","from","transform","opacity","enter","leave","message","concat","slice","setTimeout","map","props","style","Theme","ThemeContext","ThemeProvider","Providers","Protected","lazy","Unprotected","Routes","Suspense","fallback","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57abe485.chunk.js","sourcesContent":["//If Properties are defined returns the object property if not returns returnValue\r\n\r\nconst isPropertyDefined = (object, properties = [], returnValue = {}) => {\r\n    let temp = object;\r\n\r\n    if(properties.length === 0 && object.constructor === Object && Object.entries(object).length === 0) return returnValue;\r\n\r\n    for(let i = 0; i < properties.length; i++) {\r\n        if(temp[properties[i]]) {\r\n            temp = temp[properties[i]];\r\n        } else {\r\n            return returnValue;\r\n        }\r\n    }\r\n\r\n    return temp;\r\n};\r\n\r\nexport default isPropertyDefined;","import React from 'react';\r\nimport FireBaseApp from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport isPropertyDefined from \"../Functions/isPropertyDefined\";\r\n\r\nexport const FireBaseContext = React.createContext();\r\n\r\nconst FireBaseConfig = {\r\n    apiKey: \"AIzaSyA4Mf8JOEMj97B8aGW-73GR_UFD2iZ0VRg\",\r\n    authDomain: \"elearning-d6924.firebaseapp.com\",\r\n    databaseURL: \"https://elearning-d6924.firebaseio.com\",\r\n    projectId: \"elearning-d6924\",\r\n    storageBucket: \"elearning-d6924.appspot.com\",\r\n    messagingSenderId: \"368017147882\",\r\n    appId: \"1:368017147882:web:1494e778169181aabdd493\",\r\n    measurementId: \"G-GQRZCW39GH\",\r\n};\r\n\r\nexport const useFieldValue = () => {\r\n    return FireBaseApp.firestore.FieldValue;\r\n};\r\n\r\nexport const useFieldPath = () => {\r\n    return FireBaseApp.firestore.FieldPath;\r\n};\r\n\r\nexport const useFireBase = () => {\r\n    return React.useContext(FireBaseContext);\r\n};\r\n\r\nexport const useFireBaseAuth = () => {\r\n    return React.useContext(FireBaseContext).auth();\r\n};\r\n\r\nexport const useIsAuthenticated = () => {\r\n    const [authenticated, setAuthenticated] = React.useState(false);\r\n    const FireBaseAuth = useFireBaseAuth();\r\n\r\n    React.useEffect(() => {\r\n        const unsubscribe = FireBaseAuth.onAuthStateChanged(user => {\r\n            if(!!user === authenticated) return;\r\n            setAuthenticated(!!user);\r\n        });\r\n\r\n        return () => unsubscribe();\r\n    });\r\n\r\n    return true;\r\n};\r\n\r\nexport const useIsAdmin = () => {\r\n    const userInfo = useUserInfo();\r\n\r\n    return isPropertyDefined(userInfo, ['roles', 'admin'], false);\r\n};\r\n\r\nexport const useUserInfo = () => {\r\n    const [userInfo, setUserInfo] = React.useState({});\r\n\r\n    const FireBaseAuth = useFireBaseAuth();\r\n    const {uid, email} = isPropertyDefined(FireBaseAuth, ['currentUser'], {uid: '0', email: '0'});\r\n\r\n    const Firestore = useFireBaseFirestore();\r\n\r\n    if(Object.entries(userInfo).length === 0 && userInfo.constructor === Object) {\r\n        Firestore.collection('Users').doc(uid).get().then(\r\n            (doc) => {\r\n                setUserInfo(state => ({...state, ...(doc.data()), uid, email}))\r\n            }\r\n        );\r\n    }\r\n\r\n    return userInfo;\r\n};\r\n\r\nexport const useSignOut = () => {\r\n    const FireBaseAuth = useFireBaseAuth();\r\n\r\n    return (email, password) => FireBaseAuth.signOut();\r\n};\r\n\r\nexport const useSignInWithEmailAndPassword = () => {\r\n    const FireBaseAuth = useFireBaseAuth();\r\n\r\n    return (email, password) => FireBaseAuth.signInWithEmailAndPassword(email, password);\r\n};\r\n\r\nexport const useCreateWithEmailAndPassword = () => {\r\n    const FireBaseAuth = useFireBaseAuth();\r\n\r\n    return (email, password) => FireBaseAuth.createUserWithEmailAndPassword(email, password);\r\n};\r\n\r\nexport const useFireBaseFirestore = () => {\r\n    const firestore = React.useContext(FireBaseContext).firestore();\r\n\r\n    return firestore;\r\n};\r\n\r\nconst FireBaseProvider = ({children}) => {\r\n    const FireBase = FireBaseApp.initializeApp(FireBaseConfig);\r\n\r\n    FireBase.firestore().GetOptions = {source: 'cache'}\r\n\r\n    FireBase.firestore().enablePersistence().catch(err => {\r\n        if(err.code === 'failed-precondition') {\r\n            console.log('Multiple tabs openened.');\r\n        }\r\n        if(err.code === 'unimplemented') {\r\n            console.log('Current browser does not support persistence.');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <FireBaseContext.Provider value={FireBase}>\r\n            {children}\r\n        </FireBaseContext.Provider>\r\n    )\r\n};\r\n\r\nexport default FireBaseProvider;","const chars = [\r\n    \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\r\n    \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\",\r\n    \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"\r\n];\r\n\r\nconst uniqueId = () => {\r\n    let temp = ''\r\n\r\n    for(let i = 0; i < 16; i++) {\r\n        temp += chars[Math.round(Math.random()*61)];\r\n    }\r\n\r\n    return temp;\r\n};\r\n\r\nexport default uniqueId;","import styled from 'styled-components';\r\nimport {animated} from \"react-spring\";\r\n\r\nconst Snack = styled(animated.div)`\r\n    box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\r\n    margin: 8px;\r\n    background-color: red;\r\n    color: white;\r\n    padding: 8px 16px;\r\n    text-align: center;\r\n    border-radius: 4px;\r\n    width: 240px;\r\n`;\r\n\r\nexport default Snack;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Snack from \"./Snack\";\r\nimport {useTransition} from 'react-spring';\r\nimport uniqueId from \"../Functions/uniqueId\";\r\n\r\nconst SnackContext = React.createContext([]);\r\n\r\nconst Base = styled.div`\r\n    z-index: 9999;\r\n    position: fixed;\r\n    left: 0;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: column-reverse;\r\n    align-items: center;\r\n    bottom: 0;\r\n`;\r\n\r\nexport const useAddSnack = () => {\r\n    return React.useContext(SnackContext);\r\n};\r\n\r\nconst Snackbar = ({children}) => {\r\n    const [state, setState] = React.useState([]);\r\n\r\n    const addSnack = message => {\r\n        if(state.length > 4) {\r\n            setState(state.concat({key: uniqueId(), message: message}).slice(1));\r\n        } else {\r\n            setState(state.concat({key: uniqueId(), message: message}));\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setState(state => state.slice(1));\r\n        }, 2500);\r\n    };\r\n\r\n    const transition = useTransition(state, item => item.key,{\r\n        from: {transform: 'translateX(-200%) scale(0)', opacity: 0},\r\n        enter: {transform: 'translateX(0%) scale(1)', opacity: 1},\r\n        leave: {transform: 'translateX(200%) scale(0)', opacity: 0}\r\n    });\r\n\r\n    return (\r\n        <SnackContext.Provider value={addSnack}>\r\n            {children}\r\n            <Base>\r\n                {transition.map(({item, props, key}) => (\r\n                    <Snack key={key} style={{\r\n                        ...props\r\n                    }}>\r\n                        {item.message}\r\n                    </Snack>\r\n                ))}\r\n            </Base>\r\n        </SnackContext.Provider>\r\n    )\r\n};\r\n\r\nexport default Snackbar;","import React from 'react';\r\n\r\nconst Theme = {\r\n\r\n};\r\n\r\nconst ThemeContext = React.createContext();\r\n\r\nexport const useTheme = () => {\r\n    return React.useContext(ThemeContext);\r\n};\r\n\r\nconst ThemeProvider = ({children}) => {\r\n    return (\r\n        <ThemeContext.Provider value={Theme}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n};\r\n\r\nexport default ThemeProvider;","import React from 'react';\r\nimport FireBaseProvider from \"./FireBaseProvider\";\r\nimport ThemeProvider from \"./ThemeProvider\";\r\n\r\nconst Providers = ({children}) => {\r\n    return (\r\n        <FireBaseProvider>\r\n            <ThemeProvider>\r\n                {children}\r\n            </ThemeProvider>\r\n        </FireBaseProvider>\r\n    )\r\n};\r\n\r\nexport default Providers;","import React from 'react';\r\nimport {useIsAuthenticated} from \"../Providers/FireBaseProvider\";\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Snackbar from \"../Atomics/Snackbar\";\r\n\r\nconst Protected = React.lazy(() => import(\"./Protected\"));\r\nconst Unprotected = React.lazy(() => import(\"./Unprotected\"));\r\n\r\nconst Routes = () => {\r\n    const authenticated = useIsAuthenticated();\r\n\r\n    return (\r\n        <Snackbar>\r\n            <React.Suspense fallback={null}>\r\n                {authenticated ? (\r\n                    <Router>\r\n                        <Protected />\r\n                    </Router>\r\n                    )\r\n                    : <Unprotected />}\r\n            </React.Suspense>\r\n        </Snackbar>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Providers from \"./Providers\";\r\nimport Routes from \"./Routes\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Providers>\r\n            <Routes />\r\n        </Providers>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}