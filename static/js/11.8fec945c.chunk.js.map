{"version":3,"sources":["components/Routes/Unprotected/Login.js","components/Routes/Unprotected/index.jsx","components/Atomics/Input.js","components/Atomics/Form.js","components/Atomics/Button.js","components/VisualEffects/Ripple.js"],"names":["Base","styled","div","Title","Animated","animated","LoginButton","Button","Login","React","useState","signUp","setSignUp","signInWithEmailAndPassword","useSignInWithEmailAndPassword","handleSignup","state","console","log","email","password","Firestore","useFireBaseFirestore","createUserWithEmailAndPassword","useCreateWithEmailAndPassword","handleRegistration","then","info","collection","doc","user","uid","set","surname","lastname","roles","transitions","useTransition","from","transform","opacity","enter","leave","map","item","props","key","style","Form","onSubmit","Input","placeholder","name","type","text","onClick","Unprotected","children","input","unstyled","form","Submit","setState","handleUpdate","target","value","event","preventDefault","child","index","cloneElement","onChange","button","outlined","rounded","circle","unbounded","ripple","color","duration","size","positionOverride","undefined","overrideListener","ref","useRef","useCallback","rect","current","getBoundingClientRect","uniqueId","x","y","clientX","clientY","useEffect","addEventListener","copyRef","removeEventListener","string","i","String","fromCharCode","Math","floor","random","transition","left","top","backgroundColor","width","height","position","borderRadius","useRipple","ripples"],"mappings":"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","file":"static/js/11.8fec945c.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from \"../../Atomics/Input\";\r\nimport Form from \"../../Atomics/Form\";\r\nimport {\r\n    useCreateWithEmailAndPassword,\r\n    useFireBaseFirestore,\r\n    useSignInWithEmailAndPassword\r\n} from \"../../Providers/FireBaseProvider\";\r\nimport {useTransition, animated} from \"react-spring\";\r\nimport Button from \"../../Atomics/Button\";\r\n\r\nconst Base = styled.div`\r\n    box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\r\n    border-radius: 4px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    padding: 16px;\r\n    font-size: 16pt;\r\n`;\r\n\r\nconst Animated = styled(animated.div)`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst LoginButton = styled(Button)`\r\n    padding: 8px;\r\n    margin: 8px;\r\n    margin-top: 0px;\r\n    font-size: 10pt;\r\n    color: blue;\r\n`;\r\n\r\nconst Login = () => {\r\n    const [signUp, setSignUp] = React.useState(true);\r\n\r\n    const signInWithEmailAndPassword = useSignInWithEmailAndPassword();\r\n\r\n    const handleSignup = (state) => {\r\n        console.log(signInWithEmailAndPassword(state.email, state.password));\r\n    };\r\n\r\n    const Firestore = useFireBaseFirestore();\r\n    const createUserWithEmailAndPassword = useCreateWithEmailAndPassword();\r\n\r\n    const handleRegistration = (state) => {\r\n        createUserWithEmailAndPassword(state.email, state.password).then((info) => {\r\n            Firestore.collection('Users').doc(info.user.uid).set({\r\n                surname: state.surname,\r\n                lastname: state.lastname,\r\n                roles: {\r\n                    user: true\r\n                },\r\n            })\r\n        });\r\n    }\r\n\r\n    const transitions = useTransition(signUp, null, {\r\n        from: {transform: 'translateX(-200%) scale(0)', opacity: 0},\r\n        enter: {transform: 'translateX(0%) scale(1)', opacity: 1},\r\n        leave: {transform: 'translateX(200%) scale(0)', opacity: 0}\r\n    });\r\n\r\n    const SignIn = () => {\r\n        return (\r\n            <Base>\r\n                <Title>\r\n                    Login\r\n                </Title>\r\n                <Form onSubmit={handleSignup}>\r\n                    <Input placeholder={'E-Mail Adresse'} name={'email'}/>\r\n                    <Input type={'password'} placeholder={'Passwort'} name={'password'}/>\r\n                </Form>\r\n                <LoginButton text onClick={() => setSignUp(state => !state)}>Registrieren</LoginButton>\r\n            </Base>\r\n        )\r\n    };\r\n\r\n    const SignUp = () => {\r\n        return (\r\n            <Base>\r\n                <Title>\r\n                    Registrieren\r\n                </Title>\r\n                <Form onSubmit={handleRegistration}>\r\n                    <Input placeholder={'Vorname'} name={'surname'}/>\r\n                    <Input placeholder={'Nachname'} name={'lastname'}/>\r\n                    <Input placeholder={'eMail Adresse'} name={'email'}/>\r\n                    <Input type={'password'} placeholder={'Passwort'} name={'password'}/>\r\n                </Form>\r\n                <LoginButton text onClick={() => setSignUp(state => !state)}>Login</LoginButton>\r\n            </Base>\r\n        )\r\n    };\r\n\r\n    return transitions.map(({item, props}) =>\r\n        item ?\r\n            (<Animated key={0} style={props}>{SignUp()}</Animated>) :\r\n            (<Animated key={1} style={props}>{SignIn()}</Animated>)\r\n    )\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport Login from \"./Login\";\r\n\r\nconst Unprotected = ({children}) => {\r\n    return (\r\n        <Login />\r\n    )\r\n};\r\n\r\nexport default Unprotected;","import styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n    transition: 0.3s ease all;\r\n    outline: none;\r\n    border: none;\r\n    border-bottom: 2px solid #ccc;\r\n    background-color: white;\r\n    padding: 8px;\r\n    margin: 4px;\r\n    \r\n    :focus {\r\n        border-color: blue;\r\n        background-color: white;\r\n    }\r\n    \r\n    ${props => props.unstyled ? `\r\n        margin: 0;\r\n        padding: 0;\r\n        font-size: inherit;\r\n        font-color: inherit;\r\n        border: none;\r\n    ` : ''}\r\n`;\r\n\r\nexport default Input;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Base = styled.form`\r\n    padding: 0px 16px 16px 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Submit = styled.input`\r\n    display: none;\r\n`;\r\n\r\nconst Form = ({children, onSubmit, ...props}) => {\r\n    const [state, setState] = React.useState();\r\n\r\n    const handleUpdate = (target) => {\r\n        setState(state => ({...state, [target.name]: target.value}));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        onSubmit(state);\r\n    };\r\n\r\n    return (\r\n        <Base onSubmit={handleSubmit}>\r\n            {children.map((child, index) => {\r\n                return React.cloneElement(child, {key: index, onChange: (event) => handleUpdate(event.target)})\r\n            })}\r\n            <Submit type={'submit'} />\r\n        </Base>\r\n    )\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useRipple} from '../VisualEffects/Ripple';\r\n\r\nconst Base = styled.button`\r\n    position: relative;\r\n    transition: 0.5s ease background-color, 0.5s ease color;\r\n    box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\r\n    font-size: 12pt;\r\n    text-align: center;\r\n    outline: none;\r\n    border: none;\r\n    background-color: white;\r\n    overflow: hidden;\r\n    \r\n    ${props => props.text ? `background-color: transparent; box-shadow: none;` : ``};\r\n    ${props => props.outlined ? `background-color: transparent; box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25)` : ``};\r\n    ${props => props.rounded ? `border-radius: 4px` : ``};\r\n    ${props => props.circle ? `border-radius: 50%` : ``};\r\n    ${props => props.unbounded ? `overflow: visible` : ``};\r\n    ${props => props.styled ? `padding: 16px; color: white; background-color: #0d47a1` : ''};\r\n`;\r\n\r\nconst Button = ({\r\n                    children,\r\n                    ripple = {color: 'rgba(0, 0, 0, 0.5)', duration: 500, size: 20},\r\n                    ...props\r\n}) => {\r\n    const [ref, ripples] = useRipple(ripple);\r\n\r\n    return (\r\n        <>\r\n            <Base ref={ref} {...props}>\r\n                {ripples}\r\n                {children}\r\n            </Base>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport {useTransition, animated} from 'react-spring';\r\n\r\nexport const useRipple = ({duration, color, size} = {\r\n    duration: 500,\r\n    color: 'rgba(0, 0, 0, 0.5)',\r\n    size: 10\r\n}, positionOverride = undefined, overrideListener = 'click') => {\r\n    const ref = React.useRef();\r\n\r\n    const [state, setState] = React.useState([]);\r\n\r\n    const ripple = React.useCallback((event) => {\r\n        const rect = ref.current.getBoundingClientRect();\r\n\r\n        if (positionOverride) {\r\n            setState(\r\n                {key: uniqueId(), x: positionOverride[0], y: positionOverride[1]}\r\n            );\r\n        } else {\r\n            setState(\r\n                {key: uniqueId(), x: event.clientX - rect.x, y: event.clientY - rect.y}\r\n            );\r\n        }\r\n    }, [positionOverride, state]);\r\n\r\n    React.useEffect(() => {\r\n        ref.current.addEventListener(overrideListener, ripple);\r\n\r\n        const copyRef = ref;\r\n\r\n        return () => {\r\n            copyRef.current.removeEventListener(overrideListener, ripple);\r\n        }\r\n    }, [overrideListener, positionOverride, ripple]);\r\n\r\n    const uniqueId = () => {\r\n        let string = '';\r\n\r\n        for (let i = 0; i < 16; i++) {\r\n            string += String.fromCharCode(Math.floor(Math.random() * 255));\r\n        }\r\n\r\n        return string;\r\n    }\r\n\r\n    const transition = useTransition(state, item => item.key, {\r\n        from: {transform: 'scale(0)', opacity: 1},\r\n        enter: {transform: `scale(${size})`, opacity: 0},\r\n        leave: {transform: `scale(${size})`, opacity: 0}\r\n    });\r\n\r\n    return [\r\n        ref,\r\n        transition.map(({item, props, key}) =>\r\n            <animated.div\r\n                key={item.key}\r\n                style={{\r\n                    ...props,\r\n                    left: item.x,\r\n                    top: item.y,\r\n                    backgroundColor: color,\r\n                    width: 10,\r\n                    height: 10,\r\n                    position: 'absolute',\r\n                    borderRadius: 5\r\n                }}\r\n            />)\r\n    ];\r\n};"],"sourceRoot":""}