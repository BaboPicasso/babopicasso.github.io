{"version":3,"sources":["components/Routes/Protected/Module.js","components/Atomics/Placeholder.js","components/Atomics/Section.js","components/Atomics/CardSymbol.js","components/Atomics/CourseCarousel.js","components/Atomics/CardTitle.js","components/Atomics/CourseCard.js"],"names":["Module","useParams","courseId","moduleGroupId","moduleId","exercises","useGetData","title","temp","key","description","symbol","id","push","slim","to","constructExercises","placeholder","keyframes","Placeholder","css","injectPlaceholder","props","undefined","children","Base","styled","section","Title","div","Body","active","Section","React","useState","state","setState","onClick","CardSymbol","Icon","CourseCarousel","CardTitle","h1","Card","CardDescription","CardLink","NavButton","CardWrapper","CourseCard","text"],"mappings":"kGAAA,kEAoCeA,UA7BA,WAAO,IAAD,EAC2BC,cAArCC,EADU,EACVA,SAAUC,EADA,EACAA,cAAeC,EADf,EACeA,SAC1BC,EAAYC,YAAW,YAAaF,GAkB1C,OACI,kBAAC,IAAD,CAASG,MAAO,qBACZ,kBAAC,IAAD,KAlBmB,WACvB,IAAMC,EAAO,GAEb,IAAI,IAAIC,KAAOJ,EAAW,CAAC,IAAD,EACmBA,EAAUI,GAA5CF,EADe,EACfA,MAAOG,EADQ,EACRA,YAAaC,EADL,EACKA,OAAQC,EADb,EACaA,GAEnCJ,EAAKK,KACD,kBAAC,IAAD,CAAYJ,IAAG,OAAEG,QAAF,IAAEA,IAAM,EAAGE,MAAI,EAACP,MAAOA,EAAOI,OAAQA,EAAQI,GAAE,kBAAab,EAAb,YAAyBC,EAAzB,YAA0CC,EAA1C,YAAsDQ,IAChHF,IAKb,OAAOF,EAMEQ,O,oyBC5BjB,IAAMC,EAAcC,YAAH,KAWXC,EAAcC,YAAH,IAIKH,GAYTI,EAAoB,SAACC,GAC9B,YAA0BC,IAAnBD,EAAME,SAAyBL,EAAc,K,kpBCzBxD,IAAMM,EAAOC,IAAOC,QAAV,KAUJC,EAAQF,IAAOG,IAAV,IAOLR,KAGAS,EAAOJ,IAAOG,IAAV,KAEI,qBAAEE,OAAqB,OAAS,SAgB/BC,IAbC,SAAC,GAAiC,IAAhCzB,EAA+B,EAA/BA,MAAOiB,EAAwB,EAAxBA,SAAaF,EAAW,sCACnBW,IAAMC,UAAS,GADI,mBACtCC,EADsC,KAC/BC,EAD+B,KAG7C,OACI,kBAACX,EAASH,EACN,kBAACM,EAAD,KAASrB,EAAM,kBAAC,IAAD,CAAM8B,QAAS,kBAAMD,GAAS,SAAAD,GAAK,OAAKA,OAASA,EAAQ,SAAW,QACnF,kBAACL,EAAD,CAAMC,OAAQI,GACTX,M,oUCjCjB,IAAMc,EAAaZ,YAAOa,IAAPb,CAAH,IASVL,KAGSiB,O,6SCbf,IAAMb,EAAOC,IAAOG,IAAV,KAkBKW,IARQ,SAAC,GAAgB,IAAfhB,EAAc,EAAdA,SACrB,OACI,kBAACC,EAAD,KACKD,K,4PCbb,IAOeiB,EAPGf,IAAOgB,GAAV,IAITrB,K,ukBCAN,IAAMsB,EAAOjB,IAAOG,IAAV,KASJe,EAAkBlB,IAAOG,IAAV,IAGfR,KAGAwB,EAAWnB,YAAOoB,IAAPpB,CAAH,KAMRqB,EAAcrB,IAAOG,IAAV,KAiBFmB,IAbI,SAAC,GAAmD,IAAlDrC,EAAiD,EAAjDA,OAAQa,EAAyC,EAAzCA,SAAUT,EAA+B,EAA/BA,GAAIR,EAA2B,EAA3BA,MAAOO,EAAoB,EAApBA,KAAoB,yDAClE,OACI,kBAACiC,EAAD,KACI,kBAACJ,EAAD,CAAM7B,KAAMA,GACPA,EAAO,KAAO,kBAACwB,EAAA,EAAD,KAAa3B,GAC5B,kBAAC,EAAD,KAAYJ,GACXO,EAAO,KAAO,kBAAC8B,EAAD,KAAkBpB,GACjC,kBAACqB,EAAD,CAAUI,MAAI,EAAClC,GAAIA,GAAnB","file":"static/js/9.69ad8395.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {useGetData} from \"../../Providers/CourseProvider\";\r\nimport CourseCard from \"../../Atomics/CourseCard\";\r\nimport Section from \"../../Atomics/Section\";\r\nimport CourseCarousel from \"../../Atomics/CourseCarousel\";\r\n\r\nconst Module = () => {\r\n    const {courseId, moduleGroupId, moduleId} = useParams();\r\n    const exercises = useGetData('Exercises', moduleId);\r\n\r\n    const constructExercises = () => {\r\n        const temp = [];\r\n\r\n        for(let key in exercises) {\r\n            const {title, description, symbol, id} = exercises[key];\r\n\r\n            temp.push(\r\n                <CourseCard key={id ?? 0} slim title={title} symbol={symbol} to={`/course/${courseId}/${moduleGroupId}/${moduleId}/${id}`}>\r\n                    {description}\r\n                </CourseCard>\r\n            )\r\n        };\r\n\r\n        return temp;\r\n    };\r\n\r\n    return (\r\n        <Section title={'ModulÃ¼bersicht'}>\r\n            <CourseCarousel>\r\n                {constructExercises()}\r\n            </CourseCarousel>\r\n        </Section>\r\n    );\r\n};\r\n\r\nexport default Module;","import {keyframes, css} from 'styled-components';\r\n\r\nconst placeholder = keyframes`\r\n    @keyframes placeHolderShimmer{\r\n        0%{\r\n            background-position: -468px 0\r\n        }\r\n        100%{\r\n            background-position: 468px 0\r\n        }\r\n    }\r\n`;\r\n\r\nconst Placeholder = css`\r\n    animation-duration: 1.8s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-name: ${placeholder};\r\n    animation-timing-function: linear;\r\n    background: linear-gradient(to right, #fafafa 8%, #e0e0e0 38%, #fafafa 54%);\r\n    background-size: 1000px 640px;\r\n    position: relative;\r\n    \r\n    :before {\r\n        content: 'x';\r\n        color: transparent;\r\n    }\r\n`;\r\n\r\nexport const injectPlaceholder = (props) => {\r\n    return props.children === undefined ? Placeholder : '';\r\n};\r\n\r\nexport default Placeholder;","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport {injectPlaceholder} from \"./Placeholder\";\r\nimport Icon from \"./Icon\";\r\n\r\nconst Base = styled.section`\r\n    border-bottom: 1px solid #ccc;\r\n    padding-bottom: 8px;\r\n    margin-bottom: 16px;\r\n    \r\n    + :last-child {\r\n        border: none;\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 16pt;\r\n    margin-bottom: 16px;\r\n    color: black;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    ${injectPlaceholder}\r\n`;\r\n\r\nconst Body = styled.div`\r\n    overflow: hidden;\r\n    height: ${({active}) => active ? 'auto' : '0px'};\r\n`;\r\n\r\nconst Section = ({title, children, ...props}) => {\r\n    const [state, setState] = React.useState(true);\r\n\r\n    return (\r\n        <Base {...props}>\r\n            <Title >{title}<Icon onClick={() => setState(state => !state)}>{state ? 'remove' : 'add'}</Icon></Title>\r\n            <Body active={state}>\r\n                {children}\r\n            </Body>\r\n        </Base>\r\n    )\r\n};\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\nimport Icon from \"./Icon\";\r\nimport {injectPlaceholder} from \"./Placeholder\";\r\n\r\nconst CardSymbol = styled(Icon)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n    background-color: #0d47a1;\r\n    padding: 16px;\r\n    font-size: 48px;\r\n    \r\n    ${injectPlaceholder};\r\n`;\r\n\r\nexport default CardSymbol;","import styled from \"styled-components\";\r\nimport React from 'react';\r\n\r\nconst Base = styled.div`\r\n    overflow: auto;\r\n    width: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n`;\r\n\r\nconst CourseCarousel = ({children}) => {\r\n    return (\r\n        <Base>\r\n            {children}\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default CourseCarousel;","import styled from \"styled-components\";\r\nimport {injectPlaceholder} from \"./Placeholder\";\r\n\r\nconst CardTitle = styled.h1`\r\n    padding: 8px 8px 8px 8px;\r\n    font-size: 13pt;\r\n    color: #666;\r\n    ${injectPlaceholder};\r\n`;\r\n\r\nexport default CardTitle;","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport CardSymbol from \"./CardSymbol\";\r\nimport NavButton from \"./NavButton\";\r\nimport {injectPlaceholder} from \"./Placeholder\";\r\nimport CardTitle from \"./CardTitle\";\r\n\r\nconst Card = styled.div`\r\n    width: 200px;\r\n    box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n`;\r\n\r\nconst CardDescription = styled.div`\r\n    padding: 0 8px 8px 8px;\r\n    font-size: 11pt;\r\n    ${injectPlaceholder};\r\n`;\r\n\r\nconst CardLink = styled(NavButton)`\r\n    font-size: 10pt;\r\n    padding: 8px;\r\n    color: #0d47a1;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n    padding: 8px;\r\n`;\r\n\r\nconst CourseCard = ({symbol, children, to, title, slim, ...props}) => {\r\n    return (\r\n        <CardWrapper>\r\n            <Card slim={slim}>\r\n                {slim ? null : <CardSymbol>{symbol}</CardSymbol>}\r\n                <CardTitle>{title}</CardTitle>\r\n                {slim ? null : <CardDescription>{children}</CardDescription>}\r\n                <CardLink text to={to}>Zur Aufgabe</CardLink>\r\n            </Card>\r\n        </CardWrapper>\r\n    )\r\n}\r\n\r\nexport default CourseCard;"],"sourceRoot":""}