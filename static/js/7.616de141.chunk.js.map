{"version":3,"sources":["components/Routes/Protected/Course.js","components/Atomics/Placeholder.js","components/Hooks/useDimensions.js","components/Atomics/Section.js","components/Atomics/CardSymbol.js","components/Atomics/CourseCarousel.js","components/Atomics/CardTitle.js","components/Atomics/CourseCard.js"],"names":["ModuleGroup","courseId","moduleGroupId","modules","useGetData","temp","key","title","description","symbol","id","push","to","constructModules","Course","useParams","moduleGroups","item","style","display","flexWrap","justifyContent","constructModuleGroups","placeholder","keyframes","Placeholder","css","injectPlaceholder","props","undefined","children","useDimensions","ref","React","useRef","useState","dimensions","setDimensions","useLayoutEffect","current","getBoundingClientRect","MutationObserver","mutations","forEach","mutation","handleResize","observe","attributes","characterData","subtree","window","addEventListener","removeEventListener","Base","styled","section","Title","div","Body","Wrapper","height","active","Section","isStatic","state","setState","onClick","Icon","CardSymbol","CourseCarousel","CardTitle","h1","Card","CardDescription","CardLink","NavButton","CardWrapper","CourseCard","slim","text"],"mappings":"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","file":"static/js/7.616de141.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {} from \"../../Providers/CourseProvider\";\r\nimport Section from \"../../Atomics/Section\";\r\nimport CourseCard from \"../../Atomics/CourseCard\";\r\nimport CourseCarousel from \"../../Atomics/CourseCarousel\";\r\nimport {useGetData} from \"../../Providers/CourseProvider\";\r\n\r\nconst ModuleGroup = ({courseId, moduleGroupId}) => {\r\n    const modules = useGetData('Modules', moduleGroupId);\r\n\r\n    const constructModules = () => {\r\n        const temp = [];\r\n\r\n        for(let key in modules) {\r\n            const {title, description, symbol, id} = modules[key];\r\n\r\n            temp.push(\r\n                <CourseCard key={key ?? 0} title={title} symbol={symbol} to={`/course/${courseId}/${moduleGroupId}/${id}`}>\r\n                    {description}\r\n                </CourseCard>\r\n            );\r\n        }\r\n\r\n        return temp;\r\n    };\r\n\r\n    return constructModules();\r\n};\r\n\r\nconst Course = () => {\r\n    const {courseId} = useParams();\r\n    const moduleGroups = useGetData('ModuleGroups', courseId);\r\n\r\n    const constructModuleGroups = () => {\r\n        const temp = [];\r\n\r\n        for(let key in moduleGroups) {\r\n            const item = moduleGroups[key];\r\n            temp.push(\r\n                <Section key={item.id ?? 0} title={item.title}>\r\n                    <CourseCarousel style={{display: 'flex', flexWrap: 'wrap', justifyContent: 'center'}}>\r\n                        <ModuleGroup moduleGroupId={item.id} courseId={courseId} />\r\n                    </CourseCarousel>\r\n                </Section>\r\n            )\r\n        };\r\n\r\n        return temp;\r\n    };\r\n\r\n    return constructModuleGroups();\r\n};\r\n\r\nexport default Course;","import {keyframes, css} from 'styled-components';\r\n\r\nconst placeholder = keyframes`\r\n    @keyframes placeHolderShimmer{\r\n        0%{\r\n            background-position: -468px 0\r\n        }\r\n        100%{\r\n            background-position: 468px 0\r\n        }\r\n    }\r\n`;\r\n\r\nconst Placeholder = css`\r\n    animation-duration: 1.8s;\r\n    animation-fill-mode: forwards;\r\n    animation-iteration-count: infinite;\r\n    animation-name: ${placeholder};\r\n    animation-timing-function: linear;\r\n    background: linear-gradient(to right, #fafafa 8%, #e0e0e0 38%, #fafafa 54%);\r\n    background-size: 1000px 640px;\r\n    position: relative;\r\n    \r\n    :before {\r\n        content: 'x';\r\n        color: transparent;\r\n    }\r\n`;\r\n\r\nexport const injectPlaceholder = (props) => {\r\n    return props.children === undefined ? Placeholder : '';\r\n};\r\n\r\nexport default Placeholder;","import React from 'react';\r\n\r\nconst useDimensions = () => {\r\n    const ref = React.useRef();\r\n    const [dimensions, setDimensions] = React.useState({});\r\n    React.useLayoutEffect(() => {\r\n        setDimensions(ref.current.getBoundingClientRect());\r\n\r\n        let observer = new MutationObserver(mutations => {\r\n            mutations.forEach(mutation => {\r\n                handleResize();\r\n            })\r\n        });\r\n\r\n        observer.observe(ref.current, {attributes: true, characterData: true, subtree: true});\r\n\r\n        const handleResize = () => {\r\n            setDimensions(ref.current.getBoundingClientRect());\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize);\r\n        }\r\n    }, [ref.current]);\r\n\r\n    return [ref, dimensions];\r\n};\r\n\r\nexport default useDimensions;","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport {injectPlaceholder} from \"./Placeholder\";\r\nimport Icon from \"./Icon\";\r\nimport useDimensions from \"../Hooks/useDimensions\";\r\n\r\nconst Base = styled.section`\r\n    border-bottom: 1px solid #ccc;\r\n    padding-bottom: 8px;\r\n    margin-bottom: 16px;\r\n    \r\n    + :last-child {\r\n        border: none;\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 16pt;\r\n    margin-bottom: 16px;\r\n    color: black;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    ${injectPlaceholder}\r\n`;\r\n\r\nconst Body = styled.div`\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    overflow: hidden;\r\n    transition: 0.3s ease height;\r\n    height: ${({height, active}) => active ? height : 0}px;\r\n`;\r\n\r\nconst Section = ({title, children, isStatic, ...props}) => {\r\n    const [state, setState] = React.useState(true);\r\n    const [ref, dimensions] = useDimensions();\r\n\r\n    return (\r\n        <Base {...props}>\r\n            <Title onClick={() => setState(state => !state)}>{title}{isStatic ? null : <Icon>{state ? 'remove' : 'add'}</Icon>}</Title>\r\n            {isStatic ? <Body ref={ref}>\r\n                            {children}\r\n                        </Body>\r\n                        :\r\n                        <Wrapper height={dimensions.height} active={state}>\r\n                            <Body ref={ref}>\r\n                                {children}\r\n                            </Body>\r\n                        </Wrapper>\r\n            }\r\n        </Base>\r\n    )\r\n};\r\n\r\nexport default Section;","import styled from \"styled-components\";\r\nimport Icon from \"./Icon\";\r\nimport {injectPlaceholder} from \"./Placeholder\";\r\n\r\nconst CardSymbol = styled(Icon)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    color: white;\r\n    background-color: #0d47a1;\r\n    padding: 16px;\r\n    font-size: 48px;\r\n    \r\n    ${injectPlaceholder};\r\n`;\r\n\r\nexport default CardSymbol;","import styled from \"styled-components\";\r\nimport React from 'react';\r\n\r\nconst Base = styled.div`\r\n    overflow: auto;\r\n    width: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n`;\r\n\r\nconst CourseCarousel = ({children}) => {\r\n    return (\r\n        <Base>\r\n            {children}\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default CourseCarousel;","import styled from \"styled-components\";\r\nimport {injectPlaceholder} from \"./Placeholder\";\r\n\r\nconst CardTitle = styled.h1`\r\n    padding: 8px 8px 8px 8px;\r\n    font-size: 13pt;\r\n    color: #666;\r\n    ${injectPlaceholder};\r\n`;\r\n\r\nexport default CardTitle;","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport CardSymbol from \"./CardSymbol\";\r\nimport NavButton from \"./NavButton\";\r\nimport {injectPlaceholder} from \"./Placeholder\";\r\nimport CardTitle from \"./CardTitle\";\r\n\r\nconst Card = styled.div`\r\n    width: 200px;\r\n    box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.25);\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    flex-grow: 0;\r\n    flex-shrink: 0;\r\n`;\r\n\r\nconst CardDescription = styled.div`\r\n    padding: 0 8px 8px 8px;\r\n    font-size: 11pt;\r\n    ${injectPlaceholder};\r\n`;\r\n\r\nconst CardLink = styled(NavButton)`\r\n    font-size: 10pt;\r\n    padding: 8px;\r\n    color: #0d47a1;\r\n`;\r\n\r\nconst CardWrapper = styled.div`\r\n    padding: 8px;\r\n`;\r\n\r\nconst CourseCard = ({symbol, children, to, title, slim, ...props}) => {\r\n    return (\r\n        <CardWrapper>\r\n            <Card slim={slim}>\r\n                {slim ? null : <CardSymbol>{symbol}</CardSymbol>}\r\n                <CardTitle>{title}</CardTitle>\r\n                {slim ? null : <CardDescription>{children}</CardDescription>}\r\n                <CardLink text to={to}>Zur Aufgabe</CardLink>\r\n            </Card>\r\n        </CardWrapper>\r\n    )\r\n}\r\n\r\nexport default CourseCard;"],"sourceRoot":""}